# DO NOT EDIT THIS FILE!
#
# This code is generated off of PyCDP modules. If you need to make
# changes, edit the generator and regenerate all of the modules.

from __future__ import annotations
import typing

from ..context import get_connection_context, get_session_context

import cdp.performance_timeline
from cdp.performance_timeline import (
    LargestContentfulPaint,
    LayoutShift,
    LayoutShiftAttribution,
    TimelineEvent,
    TimelineEventAdded
)


async def enable(
        event_types: typing.List[str]
    ) -> None:
    '''
    Previously buffered events would be reported before method returns.
    See also: timelineEventAdded

    :param event_types: The types of event to report, as specified in https://w3c.github.io/performance-timeline/#dom-performanceentry-entrytype The specified filter overrides any previous filters, passing empty filter disables recording. Note that not all types exposed to the web platform are currently supported.
    '''
    session = get_session_context('performance_timeline.enable')
    return await session.execute(cdp.performance_timeline.enable(event_types))
