# DO NOT EDIT THIS FILE!
#
# This code is generated off of PyCDP modules. If you need to make
# changes, edit the generator and regenerate all of the modules.

from __future__ import annotations
import typing

from ..context import get_connection_context, get_session_context

import cdp.event_breakpoints

async def remove_instrumentation_breakpoint(
        event_name: str
    ) -> None:
    r'''
    Removes breakpoint on particular native event.

    :param event_name: Instrumentation name to stop on.
    '''
    session = get_session_context('event_breakpoints.remove_instrumentation_breakpoint')
    return await session.execute(cdp.event_breakpoints.remove_instrumentation_breakpoint(event_name))


async def set_instrumentation_breakpoint(
        event_name: str
    ) -> None:
    r'''
    Sets breakpoint on particular native event.

    :param event_name: Instrumentation name to stop on.
    '''
    session = get_session_context('event_breakpoints.set_instrumentation_breakpoint')
    return await session.execute(cdp.event_breakpoints.set_instrumentation_breakpoint(event_name))
